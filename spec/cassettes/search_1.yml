---
http_interactions:
- request:
    method: get
    uri: https://books.googleapis.com/books/v1/volumes?maxResults=10&orderBy=relevance&q=sparrow&startIndex=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - Bearer
      User-Agent:
      - Faraday v1.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Date:
      - Thu, 05 Aug 2021 03:21:04 GMT
      Server:
      - ESF
      Cache-Control:
      - private
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-T051=":443"; ma=2592000,h3-Q050=":443";
        ma=2592000,h3-Q046=":443"; ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443";
        ma=2592000; v="46,43"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICJraW5kIjogImJvb2tzI3ZvbHVtZXMiLAogICJ0b3RhbEl0ZW1zIjogMjQwNiwKICAiaXRlbXMiOiBbCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICJaWFJ4bDNCbDJ4TUMiLAogICAgICAiZXRhZyI6ICJrOUNtN1pxRjRWWSIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL2Jvb2tzLmdvb2dsZWFwaXMuY29tL2Jvb2tzL3YxL3ZvbHVtZXMvWlhSeGwzQmwyeE1DIiwKICAgICAgInZvbHVtZUluZm8iOiB7CiAgICAgICAgInRpdGxlIjogIlRoZSBTcGFycm93IiwKICAgICAgICAic3VidGl0bGUiOiAiQSBOb3ZlbCIsCiAgICAgICAgImF1dGhvcnMiOiBbCiAgICAgICAgICAiTWFyeSBEb3JpYSBSdXNzZWxsIgogICAgICAgIF0sCiAgICAgICAgInB1Ymxpc2hlciI6ICJCYWxsYW50aW5lIEJvb2tzIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIyMDA4LTA1LTI3IiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiQSB2aXNpb25hcnkgd29yayB0aGF0IGNvbWJpbmVzIHNwZWN1bGF0aXZlIGZpY3Rpb24gd2l0aCBkZWVwIHBoaWxvc29waGljYWwgaW5xdWlyeSwgVGhlIFNwYXJyb3cgdGVsbHMgdGhlIHN0b3J5IG9mIGEgY2hhcmlzbWF0aWMgSmVzdWl0IHByaWVzdCBhbmQgbGluZ3Vpc3QsIEVtaWxpbyBTYW5kb3osIHdobyBsZWFkcyBhIHNjaWVudGlmaWMgbWlzc2lvbiBlbnRydXN0ZWQgd2l0aCBhIHByb2ZvdW5kIHRhc2s6IHRvIG1ha2UgZmlyc3QgY29udGFjdCB3aXRoIGludGVsbGlnZW50IGV4dHJhdGVycmVzdHJpYWwgbGlmZS4gVGhlIG1pc3Npb24gYmVnaW5zIGluIGZhaXRoLCBob3BlLCBhbmQgYmVhdXR5LCBidXQgYSBzZXJpZXMgb2Ygc21hbGwgbWlzdW5kZXJzdGFuZGluZ3MgYnJpbmdzIGl0IHRvIGEgY2F0YXN0cm9waGljIGVuZC4gUHJhaXNlIGZvciBUaGUgU3BhcnJvdyDigJxBIHN0YXJ0bGluZywgZW5ncm9zc2luZywgYW5kIG1vcmFsIHdvcmsgb2YgZmljdGlvbi7igJ3igJRUaGUgTmV3IFlvcmsgVGltZXMgQm9vayBSZXZpZXcg4oCcSW1wb3J0YW50IG5vdmVscyBsZWF2ZSBkZWVwIGNyYWNrcyBpbiBvdXIgYmVsaWVmcywgb3VyIHByZWp1ZGljZXMsIGFuZCBvdXIgYmxpbmRlcnMuIFRoZSBTcGFycm93IGlzIG9uZSBvZiB0aGVtLuKAneKAlEVudGVydGFpbm1lbnQgV2Vla2x5IOKAnFBvd2VyZnVsIC4gLiAuIFRoZSBTcGFycm93IHRhY2tsZXMgYSBkaWZmaWN1bHQgc3ViamVjdCB3aXRoIGdyYWNlIGFuZCBpbnRlbGxpZ2VuY2Uu4oCd4oCUU2FuIEZyYW5jaXNjbyBDaHJvbmljbGUg4oCcUHJvdm9jYXRpdmUsIGNoYWxsZW5naW5nIC4gLiAuIHJlY2FsbHMgYm90aCBBcnRodXIgQy4gQ2xhcmtlIGFuZCBILiBHLiBXZWxscywgd2l0aCBhIGRhc2ggb2YgUmF5IEJyYWRidXJ5IGZvciBnb29kIG1lYXN1cmUu4oCd4oCUVGhlIERhbGxhcyBNb3JuaW5nIE5ld3Mg4oCcW01hcnkgRG9yaWFdIFJ1c3NlbGwgc2hvd3MgaGVyc2VsZiB0byBiZSBhIHNraWxsZnVsIHN0b3J5dGVsbGVyIHdobyBzdWJ0bHkgYW5kIGV4cGVydGx5IGJ1aWxkcyBzdXNwZW5zZS7igJ3igJRVU0EgVG9kYXkiLAogICAgICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4MDM0NTUxMDg4NCIKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTAiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICIwMzQ1NTEwODg3IgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAgICAgICJ0ZXh0IjogdHJ1ZSwKICAgICAgICAgICJpbWFnZSI6IHRydWUKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiA0NDgsCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAgICAgICJGaWN0aW9uIgogICAgICAgIF0sCiAgICAgICAgImF2ZXJhZ2VSYXRpbmciOiA0LAogICAgICAgICJyYXRpbmdzQ291bnQiOiAyNjMsCiAgICAgICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgICAgICJhbGxvd0Fub25Mb2dnaW5nIjogdHJ1ZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMC43LjYuMC5wcmV2aWV3LjMiLAogICAgICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAgICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPVpYUnhsM0JsMnhNQyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPVpYUnhsM0JsMnhNQyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1aWFJ4bDNCbDJ4TUMmcHJpbnRzZWM9ZnJvbnRjb3ZlciZkcT1zcGFycm93JmhsPSZjZD0xJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiaW5mb0xpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1aWFJ4bDNCbDJ4TUMmc291cmNlPWdic19hcGkiLAogICAgICAgICJjYW5vbmljYWxWb2x1bWVMaW5rIjogImh0dHBzOi8vcGxheS5nb29nbGUuY29tL3N0b3JlL2Jvb2tzL2RldGFpbHM/aWQ9WlhSeGwzQmwyeE1DIgogICAgICB9LAogICAgICAic2FsZUluZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJzYWxlYWJpbGl0eSI6ICJGT1JfU0FMRSIsCiAgICAgICAgImlzRWJvb2siOiB0cnVlLAogICAgICAgICJsaXN0UHJpY2UiOiB7CiAgICAgICAgICAiYW1vdW50IjogMTAuOTksCiAgICAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgICB9LAogICAgICAgICJyZXRhaWxQcmljZSI6IHsKICAgICAgICAgICJhbW91bnQiOiAxMC45OSwKICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgIH0sCiAgICAgICAgImJ1eUxpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1aWFJ4bDNCbDJ4TUMmcmRpZD1ib29rLVpYUnhsM0JsMnhNQyZyZG90PTEmc291cmNlPWdic19hcGkiLAogICAgICAgICJvZmZlcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJmaW5za3lPZmZlclR5cGUiOiAxLAogICAgICAgICAgICAibGlzdFByaWNlIjogewogICAgICAgICAgICAgICJhbW91bnRJbk1pY3JvcyI6IDEwOTkwMDAwLAogICAgICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgICAgICB9LAogICAgICAgICAgICAicmV0YWlsUHJpY2UiOiB7CiAgICAgICAgICAgICAgImFtb3VudEluTWljcm9zIjogMTA5OTAwMDAsCiAgICAgICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJnaWZ0YWJsZSI6IHRydWUKICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0sCiAgICAgICJhY2Nlc3NJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAidmlld2FiaWxpdHkiOiAiUEFSVElBTCIsCiAgICAgICAgImVtYmVkZGFibGUiOiB0cnVlLAogICAgICAgICJwdWJsaWNEb21haW4iOiBmYWxzZSwKICAgICAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEX0ZPUl9BQ0NFU1NJQklMSVRZIiwKICAgICAgICAiZXB1YiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IHRydWUsCiAgICAgICAgICAiYWNzVG9rZW5MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Rvd25sb2FkL1RoZV9TcGFycm93LXNhbXBsZS1lcHViLmFjc20/aWQ9WlhSeGwzQmwyeE1DJmZvcm1hdD1lcHViJm91dHB1dD1hY3M0X2Z1bGZpbGxtZW50X3Rva2VuJmRsX3R5cGU9c2FtcGxlJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgInBkZiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IHRydWUsCiAgICAgICAgICAiYWNzVG9rZW5MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Rvd25sb2FkL1RoZV9TcGFycm93LXNhbXBsZS1wZGYuYWNzbT9pZD1aWFJ4bDNCbDJ4TUMmZm9ybWF0PXBkZiZvdXRwdXQ9YWNzNF9mdWxmaWxsbWVudF90b2tlbiZkbF90eXBlPXNhbXBsZSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPVpYUnhsM0JsMnhNQyZobD0mcHJpbnRzZWM9ZnJvbnRjb3ZlciZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiU0FNUExFIiwKICAgICAgICAicXVvdGVTaGFyaW5nQWxsb3dlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJzZWFyY2hJbmZvIjogewogICAgICAgICJ0ZXh0U25pcHBldCI6ICJBIHZpc2lvbmFyeSB3b3JrIHRoYXQgY29tYmluZXMgc3BlY3VsYXRpdmUgZmljdGlvbiB3aXRoIGRlZXAgcGhpbG9zb3BoaWNhbCBpbnF1aXJ5LCBUaGUgU3BhcnJvdyB0ZWxscyB0aGUgc3Rvcnkgb2YgYSBjaGFyaXNtYXRpYyBKZXN1aXQgcHJpZXN0IGFuZCBsaW5ndWlzdCwgRW1pbGlvIFNhbmRveiwgd2hvIGxlYWRzIGEgc2NpZW50aWZpYyBtaXNzaW9uIGVudHJ1c3RlZCB3aXRoIGEgcHJvZm91bmQgdGFzazogdG8gLi4uIgogICAgICB9CiAgICB9LAogICAgewogICAgICAia2luZCI6ICJib29rcyN2b2x1bWUiLAogICAgICAiaWQiOiAiMWdHZXhnRUFDQUFKIiwKICAgICAgImV0YWciOiAiR0djQ29DZWNKNFUiLAogICAgICAic2VsZkxpbmsiOiAiaHR0cHM6Ly9ib29rcy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzLzFnR2V4Z0VBQ0FBSiIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJTcGFycm93IiwKICAgICAgICAiYXV0aG9ycyI6IFsKICAgICAgICAgICJMIEogU2hlbiIKICAgICAgICBdLAogICAgICAgICJwdWJsaXNoZXIiOiAiSW5kZXBlbmRlbnRseSBQdWJsaXNoZWQiLAogICAgICAgICJwdWJsaXNoZWREYXRlIjogIjIwMTktMDYtMTEiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJUcm95IEJyZW5uYW5FdmVyeSBTb3V0aGllIGluIEJvc3RvbiBrbm93cyB0aGF0IG5hbWUuIFRoZSBzb24gb2YgYSBkZWFkIG1vYnN0ZXIuIFRoZSBoZWFydC10aHJvYiB3aXRoIHN0ZWVsLWJsdWUgZXllcy4gXCJUaGUgRml4ZXJcIiB3aG8gY2FuIG1ha2Ugb3IgYnJlYWsgeW91IGluIHRoaXMgY2l0eS4gT2gsIGFuZCBteSBuZXcgaHVzYmFuZC4gU3BhcnJvdyBSYXluZXMgVGhhdCdzIG1lLiBObyBvbmUgc2VlbWVkIHRvIHJlbWVtYmVyIG15IG5hbWUgdXAgdW50aWwgaGUgYmFyZ2VkIGludG8gbXkgbGlmZS4gQnV0IHRoZW4gaGUgY2FnZWQgbWUuIEtpZG5hcHBlZCBtZS4gQW5kIGtpbGxlZCBldmVyeSBjaGFuY2UgSSBoYWQgdG8gcnVuIGF3YXkgZnJvbSB0aGUgcGxhY2Ugd2hlcmUgd2UgZ3JldyB1cC4gUHV0IHNpbXBseSwgVHJveSBCcmVubmFuIGNsaXBwZWQgbXkgd2luZ3MuIEkgaGF2ZSBkcmVhbXMsIGJpZyBvbmVzLCBidXQgSSBkb3VidCBoZSdsbCBldmVyIGxldCBtZSBjaGFzZSB0aGVtLiBJIGhhdmUgbm8gaWRlYSB3aHkgaGUgZGVjaWRlZCB0byB0YWtlIG1lIGFzIGhpcyB3aWZlLiBCdXQgSSBkbyBrbm93IHRoaXM6IHBpc3Npbmcgb2ZmIHRoaXMgbWFuIHdpbGwgbm90IGRvIG1lIGFueSBnb29kLiBBdCBhbGwuIFNwYXJyb3cgaXMgYW4gQW1hem9uIGludGVybmF0aW9uYWwgYmVzdHNlbGxlci4iLAogICAgICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEwIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiMTA3MzM4MDI3MCIKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTMiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICI5NzgxMDczMzgwMjc1IgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAgICAgICJ0ZXh0IjogZmFsc2UsCiAgICAgICAgICAiaW1hZ2UiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBhZ2VDb3VudCI6IDMxMCwKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJtYXR1cml0eVJhdGluZyI6ICJOT1RfTUFUVVJFIiwKICAgICAgICAiYWxsb3dBbm9uTG9nZ2luZyI6IGZhbHNlLAogICAgICAgICJjb250ZW50VmVyc2lvbiI6ICJwcmV2aWV3LTEuMC4wIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD0xZ0dleGdFQUNBQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPTFnR2V4Z0VBQ0FBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJsYW5ndWFnZSI6ICJlbiIsCiAgICAgICAgInByZXZpZXdMaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPTFnR2V4Z0VBQ0FBSiZkcT1zcGFycm93JmhsPSZjZD0yJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiaW5mb0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9MWdHZXhnRUFDQUFKJmRxPXNwYXJyb3cmaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvYWJvdXQvU3BhcnJvdy5odG1sP2hsPSZpZD0xZ0dleGdFQUNBQUoiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIk5PVF9GT1JfU0FMRSIsCiAgICAgICAgImlzRWJvb2siOiBmYWxzZQogICAgICB9LAogICAgICAiYWNjZXNzSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInZpZXdhYmlsaXR5IjogIk5PX1BBR0VTIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IGZhbHNlLAogICAgICAgICJwdWJsaWNEb21haW4iOiBmYWxzZSwKICAgICAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEIiwKICAgICAgICAiZXB1YiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGRmIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPTFnR2V4Z0VBQ0FBSiZobD0mcHJpbnRzZWM9ZnJvbnRjb3ZlciZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiTk9ORSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9LAogICAgICAic2VhcmNoSW5mbyI6IHsKICAgICAgICAidGV4dFNuaXBwZXQiOiAiSSBoYXZlIG5vIGlkZWEgd2h5IGhlIGRlY2lkZWQgdG8gdGFrZSBtZSBhcyBoaXMgd2lmZS4gQnV0IEkgZG8ga25vdyB0aGlzOiBwaXNzaW5nIG9mZiB0aGlzIG1hbiB3aWxsIG5vdCBkbyBtZSBhbnkgZ29vZC4gQXQgYWxsLiBTcGFycm93IGlzIGFuIEFtYXpvbiBpbnRlcm5hdGlvbmFsIGJlc3RzZWxsZXIuIgogICAgICB9CiAgICB9LAogICAgewogICAgICAia2luZCI6ICJib29rcyN2b2x1bWUiLAogICAgICAiaWQiOiAiVjBXU0R3QUFRQkFKIiwKICAgICAgImV0YWciOiAiVTA5SE8yQVpkaVUiLAogICAgICAic2VsZkxpbmsiOiAiaHR0cHM6Ly9ib29rcy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzL1YwV1NEd0FBUUJBSiIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJTcGFycm93IiwKICAgICAgICAic3VidGl0bGUiOiAiQSBOb3ZlbCIsCiAgICAgICAgImF1dGhvcnMiOiBbCiAgICAgICAgICAiTWFyeSBDZWNpbGlhIEphY2tzb24iCiAgICAgICAgXSwKICAgICAgICAicHVibGlzaGVyIjogIlRvciBUZWVuIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIyMDIwLTAzLTE3IiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiSW4gdGhlIHRyYWRpdGlvbiBvZiBMYXVyaWUgSGFsc2UgQW5kZXJzb27igJlzIFNwZWFrLCBNYXJ5IENlY2lsaWEgSmFja3NvbidzIGRldmFzdGF0aW5nIGJ1dCBob3BlZnVsIFlBIGRlYnV0IGlzIGFib3V0IGEgYmFsbGVyaW5hIHdobyBmaW5kcyB0aGUgY291cmFnZSB0byBjb25mcm9udCB0aGUgYWJ1c2UgdGhhdCBoYXVudHMgaGVyIHBhc3QgYW5kIHRocmVhdGVucyBoZXIgZnV0dXJlLiBUaGVyZSBhcmUgdHdvIGtpbmRzIG9mIHBlb3BsZSBvbiB0aGUgcGxhbmV0LiBIdW50ZXJzIGFuZCBwcmV5IEkgdGhvdWdodCBJIHdvdWxkIGJlIHNhZmUgYWZ0ZXIgbXkgbW90aGVyIGRpZWQuIEkgdGhvdWdodCBJIGNvdWxkIHN0b3Agc2VhcmNoaW5nIGZvciBuZXcgcGxhY2VzIHRvIGhpZGUuIEJ1dCB5b3UgY2Fu4oCZdCBlc2NhcGUgd2hhdCB5b3UgYXJlLCB3aGF0IHlvdeKAmXZlIGFsd2F5cyBiZWVuLiBNeSBuYW1lIGlzIFNhdmFubmFoIERhcmN5IFJvc2UuIEFuZCBJIGFtIHN0aWxsIHByZXkuIFRob3VnaCBTYXZhbm5haCBSb3Nl4oCU4oCcU3BhcnJvd+KAnSB0byBoZXIgZnJpZW5kcyBhbmQgZmFtaWx54oCUaXMgYSBnaWZ0ZWQgYmFsbGVyaW5hLCBoZXIgcmVhbCB0YWxlbnQgaXMga2VlcGluZyBzZWNyZXRzLiBTY2hvb2xlZCBpbiBzaWxlbmNlIGJ5IGhlciBsb25nLWRlYWQgbW90aGVyLCBTcGFycm93IGhhcyBhbHdheXMgYmVsaWV2ZWQgdGhhdCBoZXIgbGlmZWxvbmcgY3JlZWTigJTigJxJ4oCZbSBub3QgdGhlIGtpbmQgb2YgZ2lybCB3aG8gdGVsbHPigJ3igJR3aWxsIG1ha2UgaGVyIGp1c3QgbGlrZSBldmVyeW9uZSBlbHNlOiBOb3JtYWwuIEhhcHB5LiBTYWZlLiBCdXQgaW4gdGhlIGFmdGVybWF0aCBvZiBhIGJydXRhbCBhc3NhdWx0IGJ5IGhlciBzZWVtaW5nbHkgcGVyZmVjdCBib3lmcmllbmQgVHJpc3RhbiwgU3BhcnJvdyBtdXN0IGZpbmFsbHkgZmluZCB0aGUgY291cmFnZSB0byBjb25mcm9udCB0aGUgZ2hvc3RzIG9mIGhlciBwYXN0LCBvciBsb3NlIGhlcnNlbGYgZm9yZXZlci4uLi4gQXQgdGhlIFB1Ymxpc2hlcidzIHJlcXVlc3QsIHRoaXMgdGl0bGUgaXMgYmVpbmcgc29sZCB3aXRob3V0IERpZ2l0YWwgUmlnaHRzIE1hbmFnZW1lbnQgU29mdHdhcmUgKERSTSkgYXBwbGllZC4iLAogICAgICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4MDc2NTM5ODg0MCIKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTAiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICIwNzY1Mzk4ODQyIgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAgICAgICJ0ZXh0IjogdHJ1ZSwKICAgICAgICAgICJpbWFnZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGFnZUNvdW50IjogMzUyLAogICAgICAgICJwcmludFR5cGUiOiAiQk9PSyIsCiAgICAgICAgImNhdGVnb3JpZXMiOiBbCiAgICAgICAgICAiWW91bmcgQWR1bHQgRmljdGlvbiIKICAgICAgICBdLAogICAgICAgICJhdmVyYWdlUmF0aW5nIjogNCwKICAgICAgICAicmF0aW5nc0NvdW50IjogNCwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMS40LjQuMC5wcmV2aWV3LjIiLAogICAgICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAgICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPVYwV1NEd0FBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPVYwV1NEd0FBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1WMFdTRHdBQVFCQUomcGc9UFAxJmRxPXNwYXJyb3cmaGw9JmNkPTMmc291cmNlPWdic19hcGkiLAogICAgICAgICJpbmZvTGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPVYwV1NEd0FBUUJBSiZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1WMFdTRHdBQVFCQUoiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIkZPUl9TQUxFIiwKICAgICAgICAiaXNFYm9vayI6IHRydWUsCiAgICAgICAgImxpc3RQcmljZSI6IHsKICAgICAgICAgICJhbW91bnQiOiA3LjM4LAogICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgfSwKICAgICAgICAicmV0YWlsUHJpY2UiOiB7CiAgICAgICAgICAiYW1vdW50IjogNy4zOCwKICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgIH0sCiAgICAgICAgImJ1eUxpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1WMFdTRHdBQVFCQUomcmRpZD1ib29rLVYwV1NEd0FBUUJBSiZyZG90PTEmc291cmNlPWdic19hcGkiLAogICAgICAgICJvZmZlcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJmaW5za3lPZmZlclR5cGUiOiAxLAogICAgICAgICAgICAibGlzdFByaWNlIjogewogICAgICAgICAgICAgICJhbW91bnRJbk1pY3JvcyI6IDczODAwMDAsCiAgICAgICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJyZXRhaWxQcmljZSI6IHsKICAgICAgICAgICAgICAiYW1vdW50SW5NaWNyb3MiOiA3MzgwMDAwLAogICAgICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgICAgICB9LAogICAgICAgICAgICAiZ2lmdGFibGUiOiB0cnVlCiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9LAogICAgICAiYWNjZXNzSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInZpZXdhYmlsaXR5IjogIlBBUlRJQUwiLAogICAgICAgICJlbWJlZGRhYmxlIjogdHJ1ZSwKICAgICAgICAicHVibGljRG9tYWluIjogZmFsc2UsCiAgICAgICAgInRleHRUb1NwZWVjaFBlcm1pc3Npb24iOiAiQUxMT1dFRCIsCiAgICAgICAgImVwdWIiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiB0cnVlCiAgICAgICAgfSwKICAgICAgICAicGRmIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPVYwV1NEd0FBUUJBSiZobD0mcHJpbnRzZWM9ZnJvbnRjb3ZlciZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiU0FNUExFIiwKICAgICAgICAicXVvdGVTaGFyaW5nQWxsb3dlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJzZWFyY2hJbmZvIjogewogICAgICAgICJ0ZXh0U25pcHBldCI6ICJJbiB0aGUgdHJhZGl0aW9uIG9mIExhdXJpZSBIYWxzZSBBbmRlcnNvbuKAmXMgU3BlYWssIE1hcnkgQ2VjaWxpYSBKYWNrc29uJiMzOTtzIGRldmFzdGF0aW5nIGJ1dCBob3BlZnVsIFlBIGRlYnV0IGlzIGFib3V0IGEgYmFsbGVyaW5hIHdobyBmaW5kcyB0aGUgY291cmFnZSB0byBjb25mcm9udCB0aGUgYWJ1c2UgdGhhdCBoYXVudHMgaGVyIHBhc3QgYW5kIHRocmVhdGVucyBoZXIgZnV0dXJlLiIKICAgICAgfQogICAgfSwKICAgIHsKICAgICAgImtpbmQiOiAiYm9va3Mjdm9sdW1lIiwKICAgICAgImlkIjogIlo3UkREd0FBUUJBSiIsCiAgICAgICJldGFnIjogInNJVG5XbVpaQVZFIiwKICAgICAgInNlbGZMaW5rIjogImh0dHBzOi8vYm9va3MuZ29vZ2xlYXBpcy5jb20vYm9va3MvdjEvdm9sdW1lcy9aN1JERHdBQVFCQUoiLAogICAgICAidm9sdW1lSW5mbyI6IHsKICAgICAgICAidGl0bGUiOiAiUHJvdmlkZW5jZSBvZiBhIFNwYXJyb3ciLAogICAgICAgICJzdWJ0aXRsZSI6ICJMZXNzb25zIGZyb20gYSBMaWZlIEdvbmUgdG8gdGhlIEJpcmRzIiwKICAgICAgICAiYXV0aG9ycyI6IFsKICAgICAgICAgICJDaHJpcyBDaGVzdGVyIgogICAgICAgIF0sCiAgICAgICAgInB1Ymxpc2hlciI6ICJBbmNob3IiLAogICAgICAgICJwdWJsaXNoZWREYXRlIjogIjIwMDQiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJEZXNjcmliZXMgdGhlIGluZmx1ZW5jZSBvZiBhIGZvdW5kbGluZyBiYWJ5IHNwYXJyb3cgdGhhdCBoZSByZXNjdWVkIG9uIHRoZSBhdXRob3IncyBsaWZlLCBoaXMgcmVsYXRpb25zaGlwIHdpdGggdGhlIGJpcmQsIGhpcyB0cmFuc2Zvcm1hdGlvbiBvZiB0aGVpciBob21lIGludG8gYW4gaW5kb29yIGF2aWFyeSwgYW5kIHdoYXQgaGlzIGJpcmRzIGhhdmUgdGF1Z2h0IGhpbSBhYm91dCBsaWZlLCBqb3ksIHRoZSB3b25kZXIgb2YgYWxsIGxpdmluZyBiZWluZ3MsIGFuZCB0aGUgbmF0dXJhbCB3b3JsZC4gUmVwcmludC4gMjAsMDAwIGZpcnN0IHByaW50aW5nLiIsCiAgICAgICAgImluZHVzdHJ5SWRlbnRpZmllcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTMiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICI5NzgxNDAwMDMzODUwIgogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMCIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjE0MDAwMzM4NTMiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVhZGluZ01vZGVzIjogewogICAgICAgICAgInRleHQiOiBmYWxzZSwKICAgICAgICAgICJpbWFnZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGFnZUNvdW50IjogMzA0LAogICAgICAgICJwcmludFR5cGUiOiAiQk9PSyIsCiAgICAgICAgImNhdGVnb3JpZXMiOiBbCiAgICAgICAgICAiQmlvZ3JhcGh5ICYgQXV0b2Jpb2dyYXBoeSIKICAgICAgICBdLAogICAgICAgICJhdmVyYWdlUmF0aW5nIjogNCwKICAgICAgICAicmF0aW5nc0NvdW50IjogMiwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMC4yLjAuMC5wcmV2aWV3LjAiLAogICAgICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAgICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPVo3UkREd0FBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPVo3UkREd0FBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1aN1JERHdBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZkcT1zcGFycm93JmhsPSZjZD00JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiaW5mb0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9WjdSRER3QUFRQkFKJmRxPXNwYXJyb3cmaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvYWJvdXQvUHJvdmlkZW5jZV9vZl9hX1NwYXJyb3cuaHRtbD9obD0maWQ9WjdSRER3QUFRQkFKIgogICAgICB9LAogICAgICAic2FsZUluZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJzYWxlYWJpbGl0eSI6ICJOT1RfRk9SX1NBTEUiLAogICAgICAgICJpc0Vib29rIjogZmFsc2UKICAgICAgfSwKICAgICAgImFjY2Vzc0luZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJ2aWV3YWJpbGl0eSI6ICJQQVJUSUFMIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IHRydWUsCiAgICAgICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRURfRk9SX0FDQ0VTU0lCSUxJVFkiLAogICAgICAgICJlcHViIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgIndlYlJlYWRlckxpbmsiOiAiaHR0cDovL3BsYXkuZ29vZ2xlLmNvbS9ib29rcy9yZWFkZXI/aWQ9WjdSRER3QUFRQkFKJmhsPSZwcmludHNlYz1mcm9udGNvdmVyJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiYWNjZXNzVmlld1N0YXR1cyI6ICJTQU1QTEUiLAogICAgICAgICJxdW90ZVNoYXJpbmdBbGxvd2VkIjogZmFsc2UKICAgICAgfSwKICAgICAgInNlYXJjaEluZm8iOiB7CiAgICAgICAgInRleHRTbmlwcGV0IjogIkRlc2NyaWJlcyB0aGUgaW5mbHVlbmNlIG9mIGEgZm91bmRsaW5nIGJhYnkgc3BhcnJvdyB0aGF0IGhlIHJlc2N1ZWQgb24gdGhlIGF1dGhvciYjMzk7cyBsaWZlLCBoaXMgcmVsYXRpb25zaGlwIHdpdGggdGhlIGJpcmQsIGhpcyB0cmFuc2Zvcm1hdGlvbiBvZiB0aGVpciBob21lIGludG8gYW4gaW5kb29yIGF2aWFyeSwgYW5kIHdoYXQgaGlzIGJpcmRzIGhhdmUgdGF1Z2h0IGhpbSBhYm91dCBsaWZlLCBqb3ksIHRoZSB3b25kZXIgLi4uIgogICAgICB9CiAgICB9LAogICAgewogICAgICAia2luZCI6ICJib29rcyN2b2x1bWUiLAogICAgICAiaWQiOiAiTVVFdURnQUFRQkFKIiwKICAgICAgImV0YWciOiAiWVRreTZ2VHJSY00iLAogICAgICAic2VsZkxpbmsiOiAiaHR0cHM6Ly9ib29rcy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzL01VRXVEZ0FBUUJBSiIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJTcGFycm93IiwKICAgICAgICAiYXV0aG9ycyI6IFsKICAgICAgICAgICJTYXJhaCBNb29uIgogICAgICAgIF0sCiAgICAgICAgInB1Ymxpc2hlciI6ICJTY2hvbGFzdGljIEluYy4iLAogICAgICAgICJwdWJsaXNoZWREYXRlIjogIjIwMTctMTAtMTAiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgc3Rvcnkgb2YgYSBzZW5zaXRpdmUsIGdpZnRlZCBBZnJpY2FuIEFtZXJpY2FuIGdpcmwgd2hvIHRlbGxzIHVzIHdpdGggbW9yZGFudCBodW1vciB3aGF0IGl0IGZlZWxzIGxpa2UgdG8gc3BlbmQgZXZlcnkgZGF5IHdpc2hpbmcgc28gaGFyZCB0aGF0IHlvdSBjb3VsZCBmbHkgYXdheSBmcm9tIGl0IGFsbCIsCiAgICAgICAgImluZHVzdHJ5SWRlbnRpZmllcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTMiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICI5NzgxMzM4MDMyNTk4IgogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMCIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjEzMzgwMzI1OTMiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVhZGluZ01vZGVzIjogewogICAgICAgICAgInRleHQiOiB0cnVlLAogICAgICAgICAgImltYWdlIjogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgInBhZ2VDb3VudCI6IDI3MiwKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIkp1dmVuaWxlIEZpY3Rpb24iCiAgICAgICAgXSwKICAgICAgICAiYXZlcmFnZVJhdGluZyI6IDQsCiAgICAgICAgInJhdGluZ3NDb3VudCI6IDQsCiAgICAgICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgICAgICJhbGxvd0Fub25Mb2dnaW5nIjogdHJ1ZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMS40LjQuMC5wcmV2aWV3LjMiLAogICAgICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAgICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPU1VRXVEZ0FBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPU1VRXVEZ0FBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1NVUV1RGdBQVFCQUomcGc9UFAxJmRxPXNwYXJyb3cmaGw9JmNkPTUmc291cmNlPWdic19hcGkiLAogICAgICAgICJpbmZvTGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPU1VRXVEZ0FBUUJBSiZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1NVUV1RGdBQVFCQUoiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIkZPUl9TQUxFIiwKICAgICAgICAiaXNFYm9vayI6IHRydWUsCiAgICAgICAgImxpc3RQcmljZSI6IHsKICAgICAgICAgICJhbW91bnQiOiAxMS45OSwKICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgIH0sCiAgICAgICAgInJldGFpbFByaWNlIjogewogICAgICAgICAgImFtb3VudCI6IDExLjk5LAogICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgfSwKICAgICAgICAiYnV5TGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPU1VRXVEZ0FBUUJBSiZyZGlkPWJvb2stTVVFdURnQUFRQkFKJnJkb3Q9MSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgIm9mZmVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgImZpbnNreU9mZmVyVHlwZSI6IDEsCiAgICAgICAgICAgICJsaXN0UHJpY2UiOiB7CiAgICAgICAgICAgICAgImFtb3VudEluTWljcm9zIjogMTE5OTAwMDAsCiAgICAgICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJyZXRhaWxQcmljZSI6IHsKICAgICAgICAgICAgICAiYW1vdW50SW5NaWNyb3MiOiAxMTk5MDAwMCwKICAgICAgICAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImdpZnRhYmxlIjogdHJ1ZQogICAgICAgICAgfQogICAgICAgIF0KICAgICAgfSwKICAgICAgImFjY2Vzc0luZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJ2aWV3YWJpbGl0eSI6ICJQQVJUSUFMIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IHRydWUsCiAgICAgICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRURfRk9SX0FDQ0VTU0lCSUxJVFkiLAogICAgICAgICJlcHViIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogdHJ1ZSwKICAgICAgICAgICJhY3NUb2tlbkxpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvZG93bmxvYWQvU3BhcnJvdy1zYW1wbGUtZXB1Yi5hY3NtP2lkPU1VRXVEZ0FBUUJBSiZmb3JtYXQ9ZXB1YiZvdXRwdXQ9YWNzNF9mdWxmaWxsbWVudF90b2tlbiZkbF90eXBlPXNhbXBsZSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiB0cnVlLAogICAgICAgICAgImFjc1Rva2VuTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9kb3dubG9hZC9TcGFycm93LXNhbXBsZS1wZGYuYWNzbT9pZD1NVUV1RGdBQVFCQUomZm9ybWF0PXBkZiZvdXRwdXQ9YWNzNF9mdWxmaWxsbWVudF90b2tlbiZkbF90eXBlPXNhbXBsZSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPU1VRXVEZ0FBUUJBSiZobD0mcHJpbnRzZWM9ZnJvbnRjb3ZlciZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiU0FNUExFIiwKICAgICAgICAicXVvdGVTaGFyaW5nQWxsb3dlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJzZWFyY2hJbmZvIjogewogICAgICAgICJ0ZXh0U25pcHBldCI6ICJUaGUgc3Rvcnkgb2YgYSBzZW5zaXRpdmUsIGdpZnRlZCBBZnJpY2FuIEFtZXJpY2FuIGdpcmwgd2hvIHRlbGxzIHVzIHdpdGggbW9yZGFudCBodW1vciB3aGF0IGl0IGZlZWxzIGxpa2UgdG8gc3BlbmQgZXZlcnkgZGF5IHdpc2hpbmcgc28gaGFyZCB0aGF0IHlvdSBjb3VsZCBmbHkgYXdheSBmcm9tIGl0IGFsbCIKICAgICAgfQogICAgfSwKICAgIHsKICAgICAgImtpbmQiOiAiYm9va3Mjdm9sdW1lIiwKICAgICAgImlkIjogImV6TlZvOGVTNm53QyIsCiAgICAgICJldGFnIjogIkVNenNoWE80bmYwIiwKICAgICAgInNlbGZMaW5rIjogImh0dHBzOi8vYm9va3MuZ29vZ2xlYXBpcy5jb20vYm9va3MvdjEvdm9sdW1lcy9lek5WbzhlUzZud0MiLAogICAgICAidm9sdW1lSW5mbyI6IHsKICAgICAgICAidGl0bGUiOiAiUmVkIFNwYXJyb3ciLAogICAgICAgICJzdWJ0aXRsZSI6ICJBIE5vdmVsIiwKICAgICAgICAiYXV0aG9ycyI6IFsKICAgICAgICAgICJKYXNvbiBNYXR0aGV3cyIKICAgICAgICBdLAogICAgICAgICJwdWJsaXNoZXIiOiAiU2ltb24gYW5kIFNjaHVzdGVyIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIyMDEzLTA2LTA0IiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiRHJhZnRlZCBhZ2FpbnN0IGhlciB3aWxsIHRvIHNlcnZlIHRoZSByZWdpbWUgb2YgVmxhZGltaXIgUHV0aW4gYXMgYW4gaW50ZWxsaWdlbmNlIHNlZHVjdHJlc3MsIERvbWluaWthIEVnb3JvdmEgZW5nYWdlcyBpbiBhIGNoYXJnZWQgZWZmb3J0IG9mIGRlY2VwdGlvbiBhbmQgdHJhZGVjcmFmdCB3aXRoIGZpcnN0LXRvdXIgQ0lBIG9mZmljZXIgTmF0aGFuaWVsIE5hc2ggYmVmb3JlIGEgZm9yYmlkZGVuIGF0dHJhY3Rpb24gdGhyZWF0ZW5zIHRoZWlyIGNhcmVlcnMuIiwKICAgICAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMyIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjk3ODE0NzY3MDYxMjIiCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEwIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiMTQ3NjcwNjEyMyIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgICAgICAidGV4dCI6IGZhbHNlLAogICAgICAgICAgImltYWdlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiA0MzQsCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAgICAgICJGaWN0aW9uIgogICAgICAgIF0sCiAgICAgICAgImF2ZXJhZ2VSYXRpbmciOiA0LAogICAgICAgICJyYXRpbmdzQ291bnQiOiAyMSwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMC4xLjAuMC5wcmV2aWV3LjAiLAogICAgICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAgICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPWV6TlZvOGVTNm53QyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPWV6TlZvOGVTNm53QyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1lek5WbzhlUzZud0MmcHJpbnRzZWM9ZnJvbnRjb3ZlciZkcT1zcGFycm93JmhsPSZjZD02JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiaW5mb0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9ZXpOVm84ZVM2bndDJmRxPXNwYXJyb3cmaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvYWJvdXQvUmVkX1NwYXJyb3cuaHRtbD9obD0maWQ9ZXpOVm84ZVM2bndDIgogICAgICB9LAogICAgICAic2FsZUluZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJzYWxlYWJpbGl0eSI6ICJOT1RfRk9SX1NBTEUiLAogICAgICAgICJpc0Vib29rIjogZmFsc2UKICAgICAgfSwKICAgICAgImFjY2Vzc0luZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJ2aWV3YWJpbGl0eSI6ICJQQVJUSUFMIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IHRydWUsCiAgICAgICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRURfRk9SX0FDQ0VTU0lCSUxJVFkiLAogICAgICAgICJlcHViIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgIndlYlJlYWRlckxpbmsiOiAiaHR0cDovL3BsYXkuZ29vZ2xlLmNvbS9ib29rcy9yZWFkZXI/aWQ9ZXpOVm84ZVM2bndDJmhsPSZwcmludHNlYz1mcm9udGNvdmVyJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiYWNjZXNzVmlld1N0YXR1cyI6ICJTQU1QTEUiLAogICAgICAgICJxdW90ZVNoYXJpbmdBbGxvd2VkIjogZmFsc2UKICAgICAgfSwKICAgICAgInNlYXJjaEluZm8iOiB7CiAgICAgICAgInRleHRTbmlwcGV0IjogIkRyYWZ0ZWQgYWdhaW5zdCBoZXIgd2lsbCB0byBzZXJ2ZSB0aGUgcmVnaW1lIG9mIFZsYWRpbWlyIFB1dGluIGFzIGFuIGludGVsbGlnZW5jZSBzZWR1Y3RyZXNzLCBEb21pbmlrYSBFZ29yb3ZhIGVuZ2FnZXMgaW4gYSBjaGFyZ2VkIGVmZm9ydCBvZiBkZWNlcHRpb24gYW5kIHRyYWRlY3JhZnQgd2l0aCBmaXJzdC10b3VyIENJQSBvZmZpY2VyIE5hdGhhbmllbCBOYXNoIGJlZm9yZSBhIGZvcmJpZGRlbiBhdHRyYWN0aW9uIC4uLiIKICAgICAgfQogICAgfSwKICAgIHsKICAgICAgImtpbmQiOiAiYm9va3Mjdm9sdW1lIiwKICAgICAgImlkIjogIlZTblZEQUFBUUJBSiIsCiAgICAgICJldGFnIjogIm9weW5PdWNJVkFBIiwKICAgICAgInNlbGZMaW5rIjogImh0dHBzOi8vYm9va3MuZ29vZ2xlYXBpcy5jb20vYm9va3MvdjEvdm9sdW1lcy9WU25WREFBQVFCQUoiLAogICAgICAidm9sdW1lSW5mbyI6IHsKICAgICAgICAidGl0bGUiOiAiU3BhcnJvdyBHaXJsIiwKICAgICAgICAiYXV0aG9ycyI6IFsKICAgICAgICAgICJTYXJhIFBlbm55cGFja2VyIgogICAgICAgIF0sCiAgICAgICAgInB1Ymxpc2hlciI6ICJMaXR0bGUsIEJyb3duIEJvb2tzIGZvciBZb3VuZyBSZWFkZXJzIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIyMDE2LTA4LTA0IiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiTWluZy1MaSBsb29rZWQgdXAgYW5kIHRyaWVkIHRvIGltYWdpbmUgdGhlIHNreSBzaWxlbnQsIGVtcHR5IG9mIGJpcmRzLiBJdCB3YXMgYSB0ZXJyaWJsZSB0aG91Z2h0LiBIZXIgY291bnRyeSdzIGxlYWRlciBoYWQgY2FsbGVkIHNwYXJyb3dzIHRoZSBlbmVteSBvZiB0aGUgZmFybWVycy0tdGhleSB3ZXJlIGVhdGluZyB0b28gbXVjaCBncmFpbiwgaGUgc2FpZC4gSGUgYW5ub3VuY2VkIGEgZ3JlYXQgXCJTcGFycm93IFdhclwiIHRvIGJhbmlzaCB0aGVtIGZyb20gQ2hpbmEsIGJ1dCBNaW5nLUxpIGRpZCBub3Qgd2FudCB0byBjaGFzZSB0aGUgYmlyZHMgYXdheS4gQXMgdGhlIHBlb3BsZSBvZiBoZXIgdmlsbGFnZSBnYXRoZXJlZCB3aXRoIGZpcmVjcmFja2VycyBhbmQgZ29uZ3MgdG8gc2NhdHRlciB0aGUgc3BhcnJvd3MsIE1pbmctTGkgaGVsZCBoZXIgZWFycyBhbmQgd2F0Y2hlZCBpbiBkaXNtYXkuIFRoZSBiaXJkcyB3ZXJlIGZhbGxpbmcgZnJvbSB0aGUgdHJlZXMsIGZyaWdodGVuZWQgdG8gZGVhdGghIE1pbmctTGkga25ldyBzaGUgaGFkIHRvIGRvIHNvbWV0aGluZyAtLSBldmVuIGlmIHNoZSBjb3VsZG4ndCBzdG9wIHRoZSBub2lzZS4gUXVpZXRseSwgc2hlIHZvd2VkIHRvIHNhdmUgYXMgbWFueSBzcGFycm93cyBhcyBzaGUgY291bGQsIG9uZSBieSBvbmUuLi4iLAogICAgICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4MTM2ODAwNDM4MSIKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTAiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICIxMzY4MDA0Mzg1IgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAgICAgICJ0ZXh0IjogdHJ1ZSwKICAgICAgICAgICJpbWFnZSI6IHRydWUKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiA0MCwKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIkp1dmVuaWxlIEZpY3Rpb24iCiAgICAgICAgXSwKICAgICAgICAiYXZlcmFnZVJhdGluZyI6IDQuNSwKICAgICAgICAicmF0aW5nc0NvdW50IjogMTAsCiAgICAgICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgICAgICJhbGxvd0Fub25Mb2dnaW5nIjogZmFsc2UsCiAgICAgICAgImNvbnRlbnRWZXJzaW9uIjogIjEuNC4yLjAucHJldmlldy4zIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1WU25WREFBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1WU25WREFBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogImVuIiwKICAgICAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9VlNuVkRBQUFRQkFKJnByaW50c2VjPWZyb250Y292ZXImZHE9c3BhcnJvdyZobD0mY2Q9NyZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImluZm9MaW5rIjogImh0dHBzOi8vcGxheS5nb29nbGUuY29tL3N0b3JlL2Jvb2tzL2RldGFpbHM/aWQ9VlNuVkRBQUFRQkFKJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPVZTblZEQUFBUUJBSiIKICAgICAgfSwKICAgICAgInNhbGVJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAic2FsZWFiaWxpdHkiOiAiRk9SX1NBTEUiLAogICAgICAgICJpc0Vib29rIjogdHJ1ZSwKICAgICAgICAibGlzdFByaWNlIjogewogICAgICAgICAgImFtb3VudCI6IDkuOTksCiAgICAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgICB9LAogICAgICAgICJyZXRhaWxQcmljZSI6IHsKICAgICAgICAgICJhbW91bnQiOiA5Ljk5LAogICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgfSwKICAgICAgICAiYnV5TGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPVZTblZEQUFBUUJBSiZyZGlkPWJvb2stVlNuVkRBQUFRQkFKJnJkb3Q9MSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgIm9mZmVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgImZpbnNreU9mZmVyVHlwZSI6IDEsCiAgICAgICAgICAgICJsaXN0UHJpY2UiOiB7CiAgICAgICAgICAgICAgImFtb3VudEluTWljcm9zIjogOTk5MDAwMCwKICAgICAgICAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInJldGFpbFByaWNlIjogewogICAgICAgICAgICAgICJhbW91bnRJbk1pY3JvcyI6IDk5OTAwMDAsCiAgICAgICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJnaWZ0YWJsZSI6IHRydWUKICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0sCiAgICAgICJhY2Nlc3NJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAidmlld2FiaWxpdHkiOiAiUEFSVElBTCIsCiAgICAgICAgImVtYmVkZGFibGUiOiB0cnVlLAogICAgICAgICJwdWJsaWNEb21haW4iOiBmYWxzZSwKICAgICAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEIiwKICAgICAgICAiZXB1YiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IHRydWUsCiAgICAgICAgICAiYWNzVG9rZW5MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Rvd25sb2FkL1NwYXJyb3dfR2lybC1zYW1wbGUtZXB1Yi5hY3NtP2lkPVZTblZEQUFBUUJBSiZmb3JtYXQ9ZXB1YiZvdXRwdXQ9YWNzNF9mdWxmaWxsbWVudF90b2tlbiZkbF90eXBlPXNhbXBsZSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiB0cnVlLAogICAgICAgICAgImFjc1Rva2VuTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9kb3dubG9hZC9TcGFycm93X0dpcmwtc2FtcGxlLXBkZi5hY3NtP2lkPVZTblZEQUFBUUJBSiZmb3JtYXQ9cGRmJm91dHB1dD1hY3M0X2Z1bGZpbGxtZW50X3Rva2VuJmRsX3R5cGU9c2FtcGxlJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgIndlYlJlYWRlckxpbmsiOiAiaHR0cDovL3BsYXkuZ29vZ2xlLmNvbS9ib29rcy9yZWFkZXI/aWQ9VlNuVkRBQUFRQkFKJmhsPSZwcmludHNlYz1mcm9udGNvdmVyJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiYWNjZXNzVmlld1N0YXR1cyI6ICJTQU1QTEUiLAogICAgICAgICJxdW90ZVNoYXJpbmdBbGxvd2VkIjogZmFsc2UKICAgICAgfSwKICAgICAgInNlYXJjaEluZm8iOiB7CiAgICAgICAgInRleHRTbmlwcGV0IjogIk1pbmctTGkgbG9va2VkIHVwIGFuZCB0cmllZCB0byBpbWFnaW5lIHRoZSBza3kgc2lsZW50LCBlbXB0eSBvZiBiaXJkcy4iCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICJxR2EzREFBQVFCQUoiLAogICAgICAiZXRhZyI6ICIwY0RNK1RqMXZ5TSIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL2Jvb2tzLmdvb2dsZWFwaXMuY29tL2Jvb2tzL3YxL3ZvbHVtZXMvcUdhM0RBQUFRQkFKIiwKICAgICAgInZvbHVtZUluZm8iOiB7CiAgICAgICAgInRpdGxlIjogIkxpdHRsZSBCb3QgYW5kIFNwYXJyb3ciLAogICAgICAgICJhdXRob3JzIjogWwogICAgICAgICAgIkpha2UgUGFya2VyIgogICAgICAgIF0sCiAgICAgICAgInB1Ymxpc2hlciI6ICJNYWNtaWxsYW4iLAogICAgICAgICJwdWJsaXNoZWREYXRlIjogIjIwMTYtMDktMjciLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJBIGxpdHRsZSByb2JvdCBhbmQgYSBzcGFycm93IGxlYXJuIGFib3V0IGZyaWVuZHNoaXAgYW5kIHNheWluZyBnb29kYnllIGluIHRoaXMgc3dlZXQgYW5kIG1vdmluZyBwaWN0dXJlIGJvb2suIiwKICAgICAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMyIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjk3ODE2MjY3MjM2NzIiCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEwIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiMTYyNjcyMzY3MiIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgICAgICAidGV4dCI6IGZhbHNlLAogICAgICAgICAgImltYWdlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiA0MCwKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIkp1dmVuaWxlIEZpY3Rpb24iCiAgICAgICAgXSwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMC4yLjAuMC5wcmV2aWV3LjAiLAogICAgICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAgICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPXFHYTNEQUFBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPXFHYTNEQUFBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1xR2EzREFBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZkcT1zcGFycm93JmhsPSZjZD04JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiaW5mb0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9cUdhM0RBQUFRQkFKJmRxPXNwYXJyb3cmaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvYWJvdXQvTGl0dGxlX0JvdF9hbmRfU3BhcnJvdy5odG1sP2hsPSZpZD1xR2EzREFBQVFCQUoiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIk5PVF9GT1JfU0FMRSIsCiAgICAgICAgImlzRWJvb2siOiBmYWxzZQogICAgICB9LAogICAgICAiYWNjZXNzSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInZpZXdhYmlsaXR5IjogIlBBUlRJQUwiLAogICAgICAgICJlbWJlZGRhYmxlIjogdHJ1ZSwKICAgICAgICAicHVibGljRG9tYWluIjogZmFsc2UsCiAgICAgICAgInRleHRUb1NwZWVjaFBlcm1pc3Npb24iOiAiQUxMT1dFRCIsCiAgICAgICAgImVwdWIiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBkZiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAid2ViUmVhZGVyTGluayI6ICJodHRwOi8vcGxheS5nb29nbGUuY29tL2Jvb2tzL3JlYWRlcj9pZD1xR2EzREFBQVFCQUomaGw9JnByaW50c2VjPWZyb250Y292ZXImc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIlNBTVBMRSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9LAogICAgICAic2VhcmNoSW5mbyI6IHsKICAgICAgICAidGV4dFNuaXBwZXQiOiAiQSByb2JvdCBiZWZyaWVuZHMgYSBzcGFycm93IHdobyB0ZWFjaGVzIGhpbSBhYm91dCBoYXBwaW5lc3MgYmVmb3JlIGZseWluZyBzb3V0aCBmb3IgdGhlIHdpbnRlci4iCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICJLSGNPREFBQVFCQUoiLAogICAgICAiZXRhZyI6ICIzWUhoc1FDLzk1dyIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL2Jvb2tzLmdvb2dsZWFwaXMuY29tL2Jvb2tzL3YxL3ZvbHVtZXMvS0hjT0RBQUFRQkFKIiwKICAgICAgInZvbHVtZUluZm8iOiB7CiAgICAgICAgInRpdGxlIjogIkZsaWdodCBvZiB0aGUgU3BhcnJvdyIsCiAgICAgICAgInN1YnRpdGxlIjogIkEgTm92ZWwgb2YgRWFybHkgQW1lcmljYSIsCiAgICAgICAgImF1dGhvcnMiOiBbCiAgICAgICAgICAiQW15IEJlbGRpbmcgQnJvd24iCiAgICAgICAgXSwKICAgICAgICAicHVibGlzaGVyIjogIlBlbmd1aW4iLAogICAgICAgICJwdWJsaXNoZWREYXRlIjogIjIwMTQiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJQcmVzZW50cyBhIGZpY3Rpb25hbGl6ZWQgYWNjb3VudCBvZiB0aGUgbGlmZSBvZiBNYXJ5IFJvd2xhbmRzb24sIGEgUHVyaXRhbiB3b21hbiBsaXZpbmcgaW4gdGhlIE1hc3NhY2h1c2V0dHMgQmF5IENvbG9ueSB3aG8gd2FzIGNhcHR1cmVkIGJ5IE5hdGl2ZSBBbWVyaWNhbiBpbiAxNjc1IGFuZCB3aG8gZGV2ZWxvcGVkIGVtcGF0aHkgZm9yIGhlciBjYXB0b3JzIGJlZm9yZSBzaGUgd2FzIHJlbGVhc2VkIGVpZ2h0IG1vbnRocyBsYXRlci4iLAogICAgICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4MDQ1MTQ2NjY5MyIKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTAiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICIwNDUxNDY2NjkxIgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAgICAgICJ0ZXh0IjogZmFsc2UsCiAgICAgICAgICAiaW1hZ2UiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBhZ2VDb3VudCI6IDMzMSwKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIkZpY3Rpb24iCiAgICAgICAgXSwKICAgICAgICAiYXZlcmFnZVJhdGluZyI6IDMuNSwKICAgICAgICAicmF0aW5nc0NvdW50IjogMTMsCiAgICAgICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgICAgICJhbGxvd0Fub25Mb2dnaW5nIjogZmFsc2UsCiAgICAgICAgImNvbnRlbnRWZXJzaW9uIjogIjAuMy4wLjAucHJldmlldy4wIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1LSGNPREFBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1LSGNPREFBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogImVuIiwKICAgICAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9S0hjT0RBQUFRQkFKJnByaW50c2VjPWZyb250Y292ZXImZHE9c3BhcnJvdyZobD0mY2Q9OSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImluZm9MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPUtIY09EQUFBUUJBSiZkcT1zcGFycm93JmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Fib3V0L0ZsaWdodF9vZl90aGVfU3BhcnJvdy5odG1sP2hsPSZpZD1LSGNPREFBQVFCQUoiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIk5PVF9GT1JfU0FMRSIsCiAgICAgICAgImlzRWJvb2siOiBmYWxzZQogICAgICB9LAogICAgICAiYWNjZXNzSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInZpZXdhYmlsaXR5IjogIlBBUlRJQUwiLAogICAgICAgICJlbWJlZGRhYmxlIjogdHJ1ZSwKICAgICAgICAicHVibGljRG9tYWluIjogZmFsc2UsCiAgICAgICAgInRleHRUb1NwZWVjaFBlcm1pc3Npb24iOiAiQUxMT1dFRF9GT1JfQUNDRVNTSUJJTElUWSIsCiAgICAgICAgImVwdWIiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBkZiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAid2ViUmVhZGVyTGluayI6ICJodHRwOi8vcGxheS5nb29nbGUuY29tL2Jvb2tzL3JlYWRlcj9pZD1LSGNPREFBQVFCQUomaGw9JnByaW50c2VjPWZyb250Y292ZXImc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIlNBTVBMRSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9LAogICAgICAic2VhcmNoSW5mbyI6IHsKICAgICAgICAidGV4dFNuaXBwZXQiOiAiUHJlc2VudHMgYSBmaWN0aW9uYWxpemVkIGFjY291bnQgb2YgdGhlIGxpZmUgb2YgTWFyeSBSb3dsYW5kc29uLCBhIFB1cml0YW4gd29tYW4gbGl2aW5nIGluIHRoZSBNYXNzYWNodXNldHRzIEJheSBDb2xvbnkgd2hvIHdhcyBjYXB0dXJlZCBieSBOYXRpdmUgQW1lcmljYW4gaW4gMTY3NSBhbmQgd2hvIGRldmVsb3BlZCBlbXBhdGh5IGZvciBoZXIgY2FwdG9ycyBiZWZvcmUgc2hlIHdhcyByZWxlYXNlZCBlaWdodCAuLi4iCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICJfZkpyRGdBQVFCQUoiLAogICAgICAiZXRhZyI6ICJrM2dFVElUWVNKTSIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL2Jvb2tzLmdvb2dsZWFwaXMuY29tL2Jvb2tzL3YxL3ZvbHVtZXMvX2ZKckRnQUFRQkFKIiwKICAgICAgInZvbHVtZUluZm8iOiB7CiAgICAgICAgInRpdGxlIjogIlNvbmcgb2YgdGhlIFNwYXJyb3ciLAogICAgICAgICJhdXRob3JzIjogWwogICAgICAgICAgIkxpc2EgU2FuZGVsbCIsCiAgICAgICAgICAiTGlzYSBBbm4gU2FuZGVsbCIKICAgICAgICBdLAogICAgICAgICJwdWJsaXNoZXIiOiAiU2Nob2xhc3RpYyBJbmMuIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIyMDE3LTA2LTI3IiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhpcyBlbG9xdWVudCBhbmQgZ3JpcHBpbmcgYWRkaXRpb24gdG8gdGhlIENhbWVsb3QgY2Fub24gLS0gd3JpdHRlbiBpbiBiZWF1dGlmdWwgdmVyc2UgLS0gaGFzIHJlY2VpdmVkIGdsb3dpbmcsIHN0YXJyZWQgcmV2aWV3cyBhbmQgZWFybHkgYXdhcmRzIGJ1enohIFNpbmNlIHRoZSBkYXlzIG9mIEtpbmcgQXJ0aHVyLCB0aGVyZSBoYXZlIGJlZW4gcG9lbXMgYW5kIHBhaW50aW5ncyBjcmVhdGVkIGluIGhlciBuYW1lLiBTaGUgaXMgRWxhaW5lIG9mIEFzY29sYXQsIHRoZSBMYWR5IG9mIFNoYWxvdHQsIGFuZCBub3cgdGhlcmUgaXMgYSBib29rIGFsbCBoZXIgb3duLiBUaGUgeWVhciBpcyA0OTAgQS5ELiBhbmQgMTYteWVhci1vbGQgRWxhaW5lIGhhcyBhIHRlbXBlcmFtZW50IHRvIG1hdGNoIGhlciBmaWVyeSByZWQgaGFpci4gTGl2aW5nIG9uIGEgbWlsaXRhcnkgYmFzZSB3aXRoIGhlciBmYXRoZXIsIGJyb3RoZXJzLCBhbmQgdGhlIHJlc3Qgb2YgQXJ0aHVyJ3MgYXJteSwgRWxhaW5lIHBpbmVzIGZvciB0aGUgaGFuZHNvbWUgTGFuY2Vsb3QsIGFuZCBsb25ncyBmb3IgYSBmZW1hbGUgZnJpZW5kLiBCdXQgd2hlbiB0aGUgY3J1ZWwsIGJlYXV0aWZ1bCBHd3luaXZlcmUgYXJyaXZlcywgRWxhaW5lIGlzIGNvbmZyb250ZWQgd2l0aCBzdGFydGxpbmcgZW1vdGlvbnMgb2YgamVhbG91c3kgYW5kIHJpdmFscnkuIENhbiBFbGFpbmUgZmluZCB0aGUgc3RyZW5ndGggdG8gc3Vydml2ZSB0aGUgYmlydGggb2YgYSBraW5nZG9tPyIsCiAgICAgICAgImluZHVzdHJ5SWRlbnRpZmllcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTMiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICI5NzgwNTQ1MzYxMDY0IgogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMCIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjA1NDUzNjEwNjAiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVhZGluZ01vZGVzIjogewogICAgICAgICAgInRleHQiOiB0cnVlLAogICAgICAgICAgImltYWdlIjogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgInBhZ2VDb3VudCI6IDQxNiwKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIkp1dmVuaWxlIEZpY3Rpb24iCiAgICAgICAgXSwKICAgICAgICAiYXZlcmFnZVJhdGluZyI6IDQsCiAgICAgICAgInJhdGluZ3NDb3VudCI6IDI4LAogICAgICAgICJtYXR1cml0eVJhdGluZyI6ICJOT1RfTUFUVVJFIiwKICAgICAgICAiYWxsb3dBbm9uTG9nZ2luZyI6IHRydWUsCiAgICAgICAgImNvbnRlbnRWZXJzaW9uIjogIjEuNS41LjAucHJldmlldy4zIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1fZkpyRGdBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1fZkpyRGdBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogImVuIiwKICAgICAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9X2ZKckRnQUFRQkFKJnByaW50c2VjPWZyb250Y292ZXImZHE9c3BhcnJvdyZobD0mY2Q9MTAmc291cmNlPWdic19hcGkiLAogICAgICAgICJpbmZvTGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPV9mSnJEZ0FBUUJBSiZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1fZkpyRGdBQVFCQUoiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIkZPUl9TQUxFIiwKICAgICAgICAiaXNFYm9vayI6IHRydWUsCiAgICAgICAgImxpc3RQcmljZSI6IHsKICAgICAgICAgICJhbW91bnQiOiA1Ljk5LAogICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgfSwKICAgICAgICAicmV0YWlsUHJpY2UiOiB7CiAgICAgICAgICAiYW1vdW50IjogNS45OSwKICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgIH0sCiAgICAgICAgImJ1eUxpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1fZkpyRGdBQVFCQUomcmRpZD1ib29rLV9mSnJEZ0FBUUJBSiZyZG90PTEmc291cmNlPWdic19hcGkiLAogICAgICAgICJvZmZlcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJmaW5za3lPZmZlclR5cGUiOiAxLAogICAgICAgICAgICAibGlzdFByaWNlIjogewogICAgICAgICAgICAgICJhbW91bnRJbk1pY3JvcyI6IDU5OTAwMDAsCiAgICAgICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJyZXRhaWxQcmljZSI6IHsKICAgICAgICAgICAgICAiYW1vdW50SW5NaWNyb3MiOiA1OTkwMDAwLAogICAgICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgICAgICB9LAogICAgICAgICAgICAiZ2lmdGFibGUiOiB0cnVlCiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9LAogICAgICAiYWNjZXNzSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInZpZXdhYmlsaXR5IjogIlBBUlRJQUwiLAogICAgICAgICJlbWJlZGRhYmxlIjogdHJ1ZSwKICAgICAgICAicHVibGljRG9tYWluIjogZmFsc2UsCiAgICAgICAgInRleHRUb1NwZWVjaFBlcm1pc3Npb24iOiAiQUxMT1dFRF9GT1JfQUNDRVNTSUJJTElUWSIsCiAgICAgICAgImVwdWIiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiB0cnVlLAogICAgICAgICAgImFjc1Rva2VuTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9kb3dubG9hZC9Tb25nX29mX3RoZV9TcGFycm93LXNhbXBsZS1lcHViLmFjc20/aWQ9X2ZKckRnQUFRQkFKJmZvcm1hdD1lcHViJm91dHB1dD1hY3M0X2Z1bGZpbGxtZW50X3Rva2VuJmRsX3R5cGU9c2FtcGxlJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgInBkZiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IHRydWUsCiAgICAgICAgICAiYWNzVG9rZW5MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Rvd25sb2FkL1Nvbmdfb2ZfdGhlX1NwYXJyb3ctc2FtcGxlLXBkZi5hY3NtP2lkPV9mSnJEZ0FBUUJBSiZmb3JtYXQ9cGRmJm91dHB1dD1hY3M0X2Z1bGZpbGxtZW50X3Rva2VuJmRsX3R5cGU9c2FtcGxlJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgIndlYlJlYWRlckxpbmsiOiAiaHR0cDovL3BsYXkuZ29vZ2xlLmNvbS9ib29rcy9yZWFkZXI/aWQ9X2ZKckRnQUFRQkFKJmhsPSZwcmludHNlYz1mcm9udGNvdmVyJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiYWNjZXNzVmlld1N0YXR1cyI6ICJTQU1QTEUiLAogICAgICAgICJxdW90ZVNoYXJpbmdBbGxvd2VkIjogZmFsc2UKICAgICAgfSwKICAgICAgInNlYXJjaEluZm8iOiB7CiAgICAgICAgInRleHRTbmlwcGV0IjogIlRoaXMgZWxvcXVlbnQgYW5kIGdyaXBwaW5nIGFkZGl0aW9uIHRvIHRoZSBDYW1lbG90IGNhbm9uIC0tIHdyaXR0ZW4gaW4gYmVhdXRpZnVsIHZlcnNlIC0tIGhhcyByZWNlaXZlZCBnbG93aW5nLCBzdGFycmVkIHJldmlld3MgYW5kIGVhcmx5IGF3YXJkcyBidXp6ISIKICAgICAgfQogICAgfQogIF0KfQo=
  recorded_at: Thu, 05 Aug 2021 03:21:04 GMT
recorded_with: VCR 6.0.0
